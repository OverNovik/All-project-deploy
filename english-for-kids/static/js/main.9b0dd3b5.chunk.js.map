{"version":3,"sources":["components/constants.ts","data/cards.ts","redux/actions.ts","redux/selectors.ts","components/CardGame/CardGame.tsx","components/gameContainer/gameContainer.tsx","components/Card/Card.tsx","components/main/main.tsx","gameFunctional/gameFunctional.tsx","components/burgerMenu/burgerMenu.tsx","components/Header/Header.tsx","App.tsx","reportWebVitals.ts","redux/rootReducer.ts","index.tsx"],"names":["CategoryIds","ActionTypes","cardsData","ACTION_A","name","data","word","translation","image","audioSrc","ACTION_B","ANIMAL_A","ANIMAL_B","CLOTHES","EMOTIONS","REPEAT_ACTION_A","REPEAT_ACTION_B","currentWordAction","payload","type","CURRENT_WORD","getIsTrainMode","state","isTrainMode","getIsPlayGame","isPlayGame","CardGame","useState","isFlipped","setFlipped","dispatch","useDispatch","useSelector","playGame","audio","Audio","audioUrl","map","el","console","log","src","className","onMouseLeave","style","height","onClick","currentTime","play","alt","display","GameContainer","category","useParams","id","Card","title","imageSrc","Main","categoryList","key","push","to","GameFunctional","BurgerMenu","active","setActive","e","stopPropagation","Header","menuActive","setMenuActive","backgroundColor","color","checked","onChange","TOGGLE_GAME_MODE","PLAY_GAME_MODE","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","game","currentWord","store","createStore","action","window","__REDUX_DEVTOOLS_EXTENSION__","app","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+TAAYA,EAWAC,E,mFAXAD,K,oBAAAA,E,oBAAAA,E,oBAAAA,E,oBAAAA,E,kBAAAA,E,oBAAAA,E,kCAAAA,E,mCAAAA,M,cAWAC,K,oCAAAA,E,gCAAAA,E,6BAAAA,M,KCRL,IAAMC,GAAyB,mBACnCF,EAAYG,SAAW,CACtBC,KAAM,iBACNC,KAAM,CACJ,CACEC,KAAM,MACNC,YAAa,6CACbC,MAAO,cACPC,SAAU,iBAEZ,CACEH,KAAM,QACNC,YAAa,yDACbC,MAAO,gBACPC,SAAU,mBAEZ,CACEH,KAAM,OACNC,YAAa,uCACbC,MAAO,eACPC,SAAU,kBAEZ,CACEH,KAAM,OACNC,YAAa,mDACbC,MAAO,eACPC,SAAU,kBAEZ,CACEH,KAAM,OACNC,YAAa,gEACbC,MAAO,eACPC,SAAU,kBAEZ,CACEH,KAAM,MACNC,YAAa,uCACbC,MAAO,cACPC,SAAU,iBAEZ,CACEH,KAAM,MACNC,YAAa,mDACbC,MAAO,cACPC,SAAU,iBAEZ,CACEH,KAAM,OACNC,YAAa,6CACbC,MAAO,eACPC,SAAU,qBAlDoB,cAsDnCT,EAAYU,SAAW,CACtBN,KAAM,iBACNC,KAAM,CACJ,CACEC,KAAM,OACNC,YAAa,yDACbC,MAAO,eACPC,SAAU,kBAEZ,CACEH,KAAM,OACNC,YAAa,uCACbC,MAAO,eACPC,SAAU,kBAEZ,CACEH,KAAM,QACNC,YAAa,yDACbC,MAAO,gBACPC,SAAU,mBAEZ,CACEH,KAAM,OACNC,YAAa,uCACbC,MAAO,eACPC,SAAU,kBAEZ,CACEH,KAAM,MACNC,YAAa,uCACbC,MAAO,cACPC,SAAU,iBAEZ,CACEH,KAAM,OACNC,YAAa,2BACbC,MAAO,eACPC,SAAU,kBAEZ,CACEH,KAAM,OACNC,YAAa,2GACbC,MAAO,eACPC,SAAU,kBAEZ,CACEH,KAAM,OACNC,YAAa,6CACbC,MAAO,eACPC,SAAU,qBAvGoB,cA2GnCT,EAAYW,SAAW,CACtBP,KAAM,iBACNC,KAAM,CACJ,CACEC,KAAM,MACNC,YAAa,qBACbC,MAAO,cACPC,SAAU,iBAEZ,CACEH,KAAM,QACNC,YAAa,mDACbC,MAAO,gBACPC,SAAU,mBAEZ,CACEH,KAAM,UACNC,YAAa,uCACbC,MAAO,kBACPC,SAAU,qBAEZ,CACEH,KAAM,MACNC,YAAa,uCACbC,MAAO,cACPC,SAAU,iBAEZ,CACEH,KAAM,QACNC,YAAa,uCACbC,MAAO,gBACPC,SAAU,mBAEZ,CACEH,KAAM,MACNC,YAAa,uCACbC,MAAO,cACPC,SAAU,iBAEZ,CACEH,KAAM,SACNC,YAAa,uCACbC,MAAO,iBACPC,SAAU,oBAEZ,CACEH,KAAM,QACNC,YAAa,2BACbC,MAAO,gBACPC,SAAU,sBA5JoB,cAgKnCT,EAAYY,SAAW,CACtBR,KAAM,iBACNC,KAAM,CACJ,CACEC,KAAM,OACNC,YAAa,iCACbC,MAAO,eACPC,SAAU,kBAEZ,CACEH,KAAM,OACNC,YAAa,2BACbC,MAAO,gBACPC,SAAU,kBAEZ,CACEH,KAAM,OACNC,YAAa,2BACbC,MAAO,eACPC,SAAU,kBAEZ,CACEH,KAAM,UACNC,YAAa,uCACbC,MAAO,kBACPC,SAAU,qBAEZ,CACEH,KAAM,OACNC,YAAa,qBACbC,MAAO,eACPC,SAAU,kBAEZ,CACEH,KAAM,QACNC,YAAa,2BACbC,MAAO,gBACPC,SAAU,mBAEZ,CACEH,KAAM,SACNC,YAAa,mDACbC,MAAO,iBACPC,SAAU,oBAEZ,CACEH,KAAM,UACNC,YAAa,6CACbC,MAAO,kBACPC,SAAU,wBAjNoB,cAqNnCT,EAAYa,QAAU,CACrBT,KAAM,UACNC,KAAM,CACJ,CACEC,KAAM,QACNC,YAAa,2BACbC,MAAO,gBACPC,SAAU,mBAEZ,CACEH,KAAM,QACNC,YAAa,iCACbC,MAAO,gBACPC,SAAU,mBAEZ,CACEH,KAAM,SACNC,YAAa,uCACbC,MAAO,iBACPC,SAAU,oBAEZ,CACEH,KAAM,QACNC,YAAa,uCACbC,MAAO,gBACPC,SAAU,mBAEZ,CACEH,KAAM,OACNC,YAAa,6CACbC,MAAO,eACPC,SAAU,kBAEZ,CACEH,KAAM,QACNC,YAAa,6CACbC,MAAO,gBACPC,SAAU,mBAEZ,CACEH,KAAM,OACNC,YAAa,uCACbC,MAAO,eACPC,SAAU,kBAEZ,CACEH,KAAM,OACNC,YAAa,iCACbC,MAAO,eACPC,SAAU,qBAtQoB,cA0QnCT,EAAYc,SAAW,CACtBV,KAAM,WACNC,KAAM,CACJ,CACEC,KAAM,MACNC,YAAa,mDACbC,MAAO,cACPC,SAAU,iBAEZ,CACEH,KAAM,QACNC,YAAa,mDACbC,MAAO,gBACPC,SAAU,mBAEZ,CACEH,KAAM,QACNC,YAAa,+DACbC,MAAO,gBACPC,SAAU,mBAEZ,CACEH,KAAM,QACNC,YAAa,mDACbC,MAAO,gBACPC,SAAU,mBAEZ,CACEH,KAAM,YACNC,YAAa,+DACbC,MAAO,oBACPC,SAAU,uBAEZ,CACEH,KAAM,SACNC,YAAa,+DACbC,MAAO,iBACPC,SAAU,oBAEZ,CACEH,KAAM,QACNC,YAAa,uCACbC,MAAO,gBACPC,SAAU,mBAEZ,CACEH,KAAM,QACNC,YAAa,2BACbC,MAAO,gBACPC,SAAU,sBA3ToB,cA+TnCT,EAAYe,gBAAkB,CAC7BX,KAAM,iBACNC,KAAM,CACJ,CACEC,KAAM,MACNC,YAAa,6CACbC,MAAO,cACPC,SAAU,iBAEZ,CACEH,KAAM,QACNC,YAAa,yDACbC,MAAO,gBACPC,SAAU,mBAEZ,CACEH,KAAM,OACNC,YAAa,uCACbC,MAAO,eACPC,SAAU,kBAEZ,CACEH,KAAM,OACNC,YAAa,mDACbC,MAAO,eACPC,SAAU,kBAEZ,CACEH,KAAM,OACNC,YAAa,gEACbC,MAAO,eACPC,SAAU,kBAEZ,CACEH,KAAM,MACNC,YAAa,uCACbC,MAAO,cACPC,SAAU,iBAEZ,CACEH,KAAM,MACNC,YAAa,mDACbC,MAAO,cACPC,SAAU,iBAEZ,CACEH,KAAM,OACNC,YAAa,6CACbC,MAAO,eACPC,SAAU,qBAhXoB,cAoXnCT,EAAYgB,gBAAkB,CAC7BZ,KAAM,iBACNC,KAAM,CACJ,CACEC,KAAM,OACNC,YAAa,yDACbC,MAAO,eACPC,SAAU,kBAEZ,CACEH,KAAM,OACNC,YAAa,uCACbC,MAAO,eACPC,SAAU,kBAEZ,CACEH,KAAM,QACNC,YAAa,yDACbC,MAAO,gBACPC,SAAU,mBAEZ,CACEH,KAAM,OACNC,YAAa,uCACbC,MAAO,eACPC,SAAU,kBAEZ,CACEH,KAAM,MACNC,YAAa,uCACbC,MAAO,cACPC,SAAU,iBAEZ,CACEH,KAAM,OACNC,YAAa,2BACbC,MAAO,eACPC,SAAU,kBAEZ,CACEH,KAAM,OACNC,YAAa,2GACbC,MAAO,eACPC,SAAU,kBAEZ,CACEH,KAAM,OACNC,YAAa,6CACbC,MAAO,eACPC,SAAU,qBAraoB,G,eCQzBQ,EAAoB,SAACC,GAAD,MAAgD,CAC/EC,KAAMlB,EAAYmB,aAClBF,YCXWG,EAAiB,SAACC,GAAD,OAAuCA,EAAMC,aAE9DC,EAAgB,SAACF,GAAD,OAAuCA,EAAMG,Y,eCiE3DC,MA3Df,YAA4F,IAAxEpB,EAAuE,EAAvEA,KAAMC,EAAiE,EAAjEA,YAAaE,EAAoD,EAApDA,SAAUD,EAA0C,EAA1CA,MAC/C,EAAgCmB,oBAAS,GAAzC,mBAAOC,EAAP,KAAkBC,EAAlB,KACMC,EAAWC,cAGXR,GAFaS,YAAYR,GACXQ,YAAYf,GACZe,YAAYX,IAK1BY,EAAW,WACf,IAAMC,EAAQ,IAAIC,MACZC,EAAWlC,EAAUF,EAAYG,UAAUE,KAAKgC,KAAI,SAACC,GAAD,OAAQA,EAAG7B,YACrE8B,QAAQC,IAAIJ,GACZF,EAAMO,IAAML,EAAS,IAevB,OAVAH,IAWE,sBAAKS,UAAW,QAAUd,EAAY,WAAa,IAAKe,aAAc,kBAAMd,GAAW,IAAvF,UACE,sBAAKa,UAAU,QAAQE,MAAOrB,EAAc,CAAEsB,OAAQ,SAAY,CAAEA,OAAQ,SAA5E,UACE,qBAAKH,UAAU,kBAAkBI,QAASvB,EAXlC,WACZ,IAAMW,EAAQ,IAAIC,MAClBD,EAAMO,IAAMhC,EACZyB,EAAMa,YAAc,EACpBb,EAAMc,OACNlB,EAASb,EAAkBR,KAMyCwB,EAAhE,SACE,qBAAKQ,IAAG,YAAOjC,GAASyC,IAAI,QAAQP,UAAU,eAEhD,qBACEA,UAAU,eACVE,MAAOrB,EAAc,CAAE2B,QAAS,SAAY,CAAEA,QAAS,QAFzD,SAIE,sBAAKR,UAAU,aAAf,UACE,4BAAIpC,IACJ,wBAAQwC,QAnCG,WACnBjB,GAAYD,IAkCJ,SACE,qBAAKa,IAAI,kDAAkDC,UAAU,2BAK7E,sBAAKA,UAAU,OAAf,UACE,qBAAKD,IAAG,aAAQjC,GAASyC,IAAI,QAAQP,UAAU,aAC/C,qBAAKA,UAAU,eAAf,SACE,qBAAKA,UAAU,aAAf,SACE,4BAAInC,eCtCD4C,MAlBf,WACE,IAAQC,EAAaC,cAAbD,SACA/C,EAASH,EAAUkD,GAAnB/C,KACR,OACE,qBAAKqC,UAAU,OAAf,SACGrC,EAAKgC,KAAI,SAACC,EAAIgB,GAAL,OACR,cAAC,EAAD,CACEhD,KAAMgC,EAAGhC,KACTC,YAAa+B,EAAG/B,YAChBC,MAAO8B,EAAG9B,MACVC,SAAQ,aAAQ6B,EAAG7B,WACd6C,S,MCGAC,MAff,YAA6D,IAA7CC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,SACrB,OACE,qBAAKf,UAAU,iBAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,qBAAKD,IAAG,YAAOgB,GAAYR,IAAI,QAAQP,UAAU,kBACjD,qBAAKA,UAAU,eAAf,SACE,qBAAKA,UAAU,aAAf,SACE,6BAAKc,c,MCQFE,MAZf,WACE,IAAMC,EAAe,GACrB,IAAK,IAAMC,KAAO1D,EAChByD,EAAaE,KACX,cAAC,IAAD,CAAMC,GAAE,gBAAWF,GAAnB,SACE,cAAC,EAAD,CAAMJ,MAAOtD,EAAU0D,GAAKxD,KAAMqD,SAAUvD,EAAU0D,GAAKvD,KAAK,GAAGG,SADtCoD,IAKnC,OAAO,qBAAKlB,UAAU,OAAf,SAAuBiB,KCPzB,SAASI,IACdxB,QAAQC,M,MCyBKwB,MA9Bf,YAMkB,IALhBC,EAKe,EALfA,OACAC,EAIe,EAJfA,UAKMP,EAAe,GACrB,IAAK,IAAMC,KAAO1D,EAChByD,EAAaE,KACX,cAAC,IAAD,CAAMC,GAAE,gBAAWF,GAAiBlB,UAAU,kBAA9C,SACGkB,GAD4BA,IAKnC,OACE,qBAAKlB,UAAWuB,EAAS,cAAgB,OAAQnB,QAAS,kBAAMoB,GAAU,IAA1E,SACE,sBAAKxB,UAAU,eAAeI,QAAS,SAACqB,GAAD,OAAOA,EAAEC,mBAAhD,UACE,qBAAK1B,UAAU,cAAf,kBACA,sBAAKA,UAAU,YAAf,UACE,cAAC,IAAD,CAAMoB,GAAG,IAAIpB,UAAU,kBAAvB,kBAGCiB,W,MCkDIU,MAtEf,WACE,MAAoC1C,oBAAS,GAA7C,mBAAO2C,EAAP,KAAmBC,EAAnB,KACMzC,EAAWC,cACXR,EAAcS,YAAYX,GAC1BI,EAAaO,YAAYR,GAgC/B,OA/BAe,QAAQC,IAAIjB,GACZgB,QAAQC,IAAIf,GA+BV,sBACEiB,UAAU,SACVE,MAAQrB,EAA2C,CAAEiD,gBAAiB,QAAhD,CAAEA,gBAAiB,OAF3C,UAIE,sBAAK9B,UAAU,yBAAf,UACE,8BACE,qBAAKA,UAAU,aAAaI,QAAS,kBAAMyB,GAAeD,IAA1D,SACE,6BAGJ,oBAAI5B,UAAU,eAAeE,MAAOrB,EAAc,CAAEkD,MAAO,SAAY,CAAEA,MAAO,UAAhF,iCAIF,cAAC,EAAD,CAAYR,OAAQK,EAAYJ,UAAWK,IAC3C,sBAAK7B,UAAU,SAAf,UACE,yCAEE,uBACEvB,KAAK,WACLuD,QAASnD,EACToD,SAAU,kBAAM7C,ER/DiC,CAC3DX,KAAMlB,EAAY2E,sBQgEV,sBAAMlC,UAAU,UAPlB,WAUEnB,EAA2B,GArD/B,qBAAKmB,UAAU,gBAAf,SACE,wBACEA,UAAU,MACVE,MAAQnB,EAAmC,CAAEyB,QAAS,SAAjC,CAAEA,QAAS,QAChCJ,QAAS,kBAAMhB,ERfkC,CACzDX,KAAMlB,EAAY4E,kBQWZ,0BAqDCpD,EAAa,GAxChB,qBAAKiB,UAAU,gBAAf,SACE,wBACEA,UAAU,MACVE,MAAOrB,EAAc,CAAE2B,QAAS,QAAW,CAAEA,QAAS,SACtDJ,QAASiB,EAHX,6BCROe,MAlBf,WACE,OACE,qBAAKpC,UAAU,cAAf,SACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqC,KAAK,IAAIC,OAAK,EAArB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,kBAAZ,SACE,cAAC,EAAD,eCHGE,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gBCNDQ,EAAkC,CAC7CnE,aAAa,EACbE,YAAY,EACZkE,KAAM,CACJC,YAAa,KCIV,IAAMC,EAAQC,aDAN,WAGO,IAFpBxE,EAEmB,uDAFXoE,EACRK,EACmB,uCACnB,OAAQA,EAAO5E,MACb,KAAKlB,EAAY2E,iBACf,OAAO,2BACFtD,GADL,IAEEC,aAAcD,EAAMC,cAExB,KAAKtB,EAAY4E,eACf,OAAO,2BACFvD,GADL,IAEEG,YAAaH,EAAMG,aAEvB,KAAKxB,EAAYmB,aACf,OAAO,2BACFE,GADL,IAEEqE,KAAK,2BACArE,EAAMqE,MADP,IAEFC,YAAaG,EAAO7E,YAG1B,QACE,OAAOI,KCpBX0E,OAAOC,8BAAgCD,OAAOC,gCAG1CC,EACJ,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,MAIJM,IAASC,OACP,cAAC,IAAD,UACE,cAAC,IAAMC,WAAP,UAAmBH,MAErBI,SAASC,eAAe,SAM1BtB,M","file":"static/js/main.9b0dd3b5.chunk.js","sourcesContent":["export enum CategoryIds {\n  ACTION_A = 'action-a',\n  ACTION_B = 'action-b',\n  ANIMAL_A = 'animal-a',\n  ANIMAL_B = 'animal-b',\n  CLOTHES = 'clothes',\n  EMOTIONS = 'emotions',\n  REPEAT_ACTION_A = 'repeat-action-a',\n  REPEAT_ACTION_B = 'repeat-action-b',\n}\n\nexport enum ActionTypes {\n  TOGGLE_GAME_MODE = 'toggle-game-mode',\n  PLAY_GAME_MODE = 'play-game-mode',\n  CURRENT_WORD = 'current-word',\n}\n","import { CardsDataModel } from '../components/interfaces';\nimport { CategoryIds } from '../components/constants';\n\nexport const cardsData: CardsDataModel = {\n  [CategoryIds.ACTION_A]: {\n    name: 'Action (set A)',\n    data: [\n      {\n        word: 'cry',\n        translation: 'плакать',\n        image: 'img/cry.jpg',\n        audioSrc: 'audio/cry.mp3',\n      },\n      {\n        word: 'dance',\n        translation: 'танцевать',\n        image: 'img/dance.jpg',\n        audioSrc: 'audio/dance.mp3',\n      },\n      {\n        word: 'dive',\n        translation: 'нырять',\n        image: 'img/dive.jpg',\n        audioSrc: 'audio/dive.mp3',\n      },\n      {\n        word: 'draw',\n        translation: 'рисовать',\n        image: 'img/draw.jpg',\n        audioSrc: 'audio/draw.mp3',\n      },\n      {\n        word: 'fish',\n        translation: 'ловить рыбу',\n        image: 'img/fish.jpg',\n        audioSrc: 'audio/fish.mp3',\n      },\n      {\n        word: 'fly',\n        translation: 'летать',\n        image: 'img/fly.jpg',\n        audioSrc: 'audio/fly.mp3',\n      },\n      {\n        word: 'hug',\n        translation: 'обнимать',\n        image: 'img/hug.jpg',\n        audioSrc: 'audio/hug.mp3',\n      },\n      {\n        word: 'jump',\n        translation: 'прыгать',\n        image: 'img/jump.jpg',\n        audioSrc: 'audio/jump.mp3',\n      },\n    ],\n  },\n  [CategoryIds.ACTION_B]: {\n    name: 'Action (set B)',\n    data: [\n      {\n        word: 'open',\n        translation: 'открывать',\n        image: 'img/open.jpg',\n        audioSrc: 'audio/open.mp3',\n      },\n      {\n        word: 'play',\n        translation: 'играть',\n        image: 'img/play.jpg',\n        audioSrc: 'audio/play.mp3',\n      },\n      {\n        word: 'point',\n        translation: 'указывать',\n        image: 'img/point.jpg',\n        audioSrc: 'audio/point.mp3',\n      },\n      {\n        word: 'ride',\n        translation: 'ездить',\n        image: 'img/ride.jpg',\n        audioSrc: 'audio/ride.mp3',\n      },\n      {\n        word: 'run',\n        translation: 'бегать',\n        image: 'img/run.jpg',\n        audioSrc: 'audio/run.mp3',\n      },\n      {\n        word: 'sing',\n        translation: 'петь',\n        image: 'img/sing.jpg',\n        audioSrc: 'audio/sing.mp3',\n      },\n      {\n        word: 'skip',\n        translation: 'пропускать, прыгать',\n        image: 'img/skip.jpg',\n        audioSrc: 'audio/skip.mp3',\n      },\n      {\n        word: 'swim',\n        translation: 'плавать',\n        image: 'img/swim.jpg',\n        audioSrc: 'audio/swim.mp3',\n      },\n    ],\n  },\n  [CategoryIds.ANIMAL_A]: {\n    name: 'Animal (set A)',\n    data: [\n      {\n        word: 'cat',\n        translation: 'кот',\n        image: 'img/cat.jpg',\n        audioSrc: 'audio/cat.mp3',\n      },\n      {\n        word: 'chick',\n        translation: 'цыплёнок',\n        image: 'img/chick.jpg',\n        audioSrc: 'audio/chick.mp3',\n      },\n      {\n        word: 'chicken',\n        translation: 'курица',\n        image: 'img/chicken.jpg',\n        audioSrc: 'audio/chicken.mp3',\n      },\n      {\n        word: 'dog',\n        translation: 'собака',\n        image: 'img/dog.jpg',\n        audioSrc: 'audio/dog.mp3',\n      },\n      {\n        word: 'horse',\n        translation: 'лошадь',\n        image: 'img/horse.jpg',\n        audioSrc: 'audio/horse.mp3',\n      },\n      {\n        word: 'pig',\n        translation: 'свинья',\n        image: 'img/pig.jpg',\n        audioSrc: 'audio/pig.mp3',\n      },\n      {\n        word: 'rabbit',\n        translation: 'кролик',\n        image: 'img/rabbit.jpg',\n        audioSrc: 'audio/rabbit.mp3',\n      },\n      {\n        word: 'sheep',\n        translation: 'овца',\n        image: 'img/sheep.jpg',\n        audioSrc: 'audio/sheep.mp3',\n      },\n    ],\n  },\n  [CategoryIds.ANIMAL_B]: {\n    name: 'Animal (set B)',\n    data: [\n      {\n        word: 'bird',\n        translation: 'птица',\n        image: 'img/bird.jpg',\n        audioSrc: 'audio/bird.mp3',\n      },\n      {\n        word: 'fish',\n        translation: 'рыба',\n        image: 'img/fish1.jpg',\n        audioSrc: 'audio/fish.mp3',\n      },\n      {\n        word: 'frog',\n        translation: 'жаба',\n        image: 'img/frog.jpg',\n        audioSrc: 'audio/frog.mp3',\n      },\n      {\n        word: 'giraffe',\n        translation: 'жирафа',\n        image: 'img/giraffe.jpg',\n        audioSrc: 'audio/giraffe.mp3',\n      },\n      {\n        word: 'lion',\n        translation: 'лев',\n        image: 'img/lion.jpg',\n        audioSrc: 'audio/lion.mp3',\n      },\n      {\n        word: 'mouse',\n        translation: 'мышь',\n        image: 'img/mouse.jpg',\n        audioSrc: 'audio/mouse.mp3',\n      },\n      {\n        word: 'turtle',\n        translation: 'черепаха',\n        image: 'img/turtle.jpg',\n        audioSrc: 'audio/turtle.mp3',\n      },\n      {\n        word: 'dolphin',\n        translation: 'дельфин',\n        image: 'img/dolphin.jpg',\n        audioSrc: 'audio/dolphin.mp3',\n      },\n    ],\n  },\n  [CategoryIds.CLOTHES]: {\n    name: 'Clothes',\n    data: [\n      {\n        word: 'skirt',\n        translation: 'юбка',\n        image: 'img/skirt.jpg',\n        audioSrc: 'audio/skirt.mp3',\n      },\n      {\n        word: 'pants',\n        translation: 'брюки',\n        image: 'img/pants.jpg',\n        audioSrc: 'audio/pants.mp3',\n      },\n      {\n        word: 'blouse',\n        translation: 'блузка',\n        image: 'img/blouse.jpg',\n        audioSrc: 'audio/blouse.mp3',\n      },\n      {\n        word: 'dress',\n        translation: 'платье',\n        image: 'img/dress.jpg',\n        audioSrc: 'audio/dress.mp3',\n      },\n      {\n        word: 'boot',\n        translation: 'ботинок',\n        image: 'img/boot.jpg',\n        audioSrc: 'audio/boot.mp3',\n      },\n      {\n        word: 'shirt',\n        translation: 'рубашка',\n        image: 'img/shirt.jpg',\n        audioSrc: 'audio/shirt.mp3',\n      },\n      {\n        word: 'coat',\n        translation: 'пальто',\n        image: 'img/coat.jpg',\n        audioSrc: 'audio/coat.mp3',\n      },\n      {\n        word: 'shoe',\n        translation: 'туфли',\n        image: 'img/shoe.jpg',\n        audioSrc: 'audio/shoe.mp3',\n      },\n    ],\n  },\n  [CategoryIds.EMOTIONS]: {\n    name: 'Emotions',\n    data: [\n      {\n        word: 'sad',\n        translation: 'грустный',\n        image: 'img/sad.jpg',\n        audioSrc: 'audio/sad.mp3',\n      },\n      {\n        word: 'angry',\n        translation: 'сердитый',\n        image: 'img/angry.jpg',\n        audioSrc: 'audio/angry.mp3',\n      },\n      {\n        word: 'happy',\n        translation: 'счастливый',\n        image: 'img/happy.jpg',\n        audioSrc: 'audio/happy.mp3',\n      },\n      {\n        word: 'tired',\n        translation: 'уставший',\n        image: 'img/tired.jpg',\n        audioSrc: 'audio/tired.mp3',\n      },\n      {\n        word: 'surprised',\n        translation: 'удивлённый',\n        image: 'img/surprised.jpg',\n        audioSrc: 'audio/surprised.mp3',\n      },\n      {\n        word: 'scared',\n        translation: 'испуганный',\n        image: 'img/scared.jpg',\n        audioSrc: 'audio/scared.mp3',\n      },\n      {\n        word: 'smile',\n        translation: 'улыбка',\n        image: 'img/smile.jpg',\n        audioSrc: 'audio/smile.mp3',\n      },\n      {\n        word: 'laugh',\n        translation: 'смех',\n        image: 'img/laugh.jpg',\n        audioSrc: 'audio/laugh.mp3',\n      },\n    ],\n  },\n  [CategoryIds.REPEAT_ACTION_A]: {\n    name: 'Action (set A)',\n    data: [\n      {\n        word: 'cry',\n        translation: 'плакать',\n        image: 'img/cry.jpg',\n        audioSrc: 'audio/cry.mp3',\n      },\n      {\n        word: 'dance',\n        translation: 'танцевать',\n        image: 'img/dance.jpg',\n        audioSrc: 'audio/dance.mp3',\n      },\n      {\n        word: 'dive',\n        translation: 'нырять',\n        image: 'img/dive.jpg',\n        audioSrc: 'audio/dive.mp3',\n      },\n      {\n        word: 'draw',\n        translation: 'рисовать',\n        image: 'img/draw.jpg',\n        audioSrc: 'audio/draw.mp3',\n      },\n      {\n        word: 'fish',\n        translation: 'ловить рыбу',\n        image: 'img/fish.jpg',\n        audioSrc: 'audio/fish.mp3',\n      },\n      {\n        word: 'fly',\n        translation: 'летать',\n        image: 'img/fly.jpg',\n        audioSrc: 'audio/fly.mp3',\n      },\n      {\n        word: 'hug',\n        translation: 'обнимать',\n        image: 'img/hug.jpg',\n        audioSrc: 'audio/hug.mp3',\n      },\n      {\n        word: 'jump',\n        translation: 'прыгать',\n        image: 'img/jump.jpg',\n        audioSrc: 'audio/jump.mp3',\n      },\n    ],\n  },\n  [CategoryIds.REPEAT_ACTION_B]: {\n    name: 'Action (set B)',\n    data: [\n      {\n        word: 'open',\n        translation: 'открывать',\n        image: 'img/open.jpg',\n        audioSrc: 'audio/open.mp3',\n      },\n      {\n        word: 'play',\n        translation: 'играть',\n        image: 'img/play.jpg',\n        audioSrc: 'audio/play.mp3',\n      },\n      {\n        word: 'point',\n        translation: 'указывать',\n        image: 'img/point.jpg',\n        audioSrc: 'audio/point.mp3',\n      },\n      {\n        word: 'ride',\n        translation: 'ездить',\n        image: 'img/ride.jpg',\n        audioSrc: 'audio/ride.mp3',\n      },\n      {\n        word: 'run',\n        translation: 'бегать',\n        image: 'img/run.jpg',\n        audioSrc: 'audio/run.mp3',\n      },\n      {\n        word: 'sing',\n        translation: 'петь',\n        image: 'img/sing.jpg',\n        audioSrc: 'audio/sing.mp3',\n      },\n      {\n        word: 'skip',\n        translation: 'пропускать, прыгать',\n        image: 'img/skip.jpg',\n        audioSrc: 'audio/skip.mp3',\n      },\n      {\n        word: 'swim',\n        translation: 'плавать',\n        image: 'img/swim.jpg',\n        audioSrc: 'audio/swim.mp3',\n      },\n    ],\n  },\n};\n","import { ActionTypes } from '../components/constants';\nimport { ActionStateModel } from '../components/interfaces';\n\nexport const toggleGameModeAction = (): ActionStateModel => ({\n  type: ActionTypes.TOGGLE_GAME_MODE,\n});\n\nexport const playGameModeAction = (): ActionStateModel => ({\n  type: ActionTypes.PLAY_GAME_MODE,\n});\n\nexport const currentWordAction = (payload: string): ActionStateModel<string> => ({\n  type: ActionTypes.CURRENT_WORD,\n  payload,\n});\n","import { InitialStateModel } from '../components/interfaces';\n\nexport const getIsTrainMode = (state: InitialStateModel): boolean => state.isTrainMode;\n\nexport const getIsPlayGame = (state: InitialStateModel): boolean => state.isPlayGame;\n\nexport const getCurrentWord = (state: InitialStateModel): string => state.game.currentWord;\n","import React, { ReactElement, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { cardsData } from '../../data/cards';\nimport { GameFunctional } from '../../gameFunctional/gameFunctional';\nimport { currentWordAction, playGameModeAction } from '../../redux/actions';\nimport { getCurrentWord, getIsPlayGame, getIsTrainMode } from '../../redux/selectors';\nimport { CategoryIds } from '../constants';\nimport { CategoryDataModel } from '../interfaces';\nimport './CardGame.css';\n\nfunction CardGame({ word, translation, audioSrc, image }: CategoryDataModel): ReactElement {\n  const [isFlipped, setFlipped] = useState(false);\n  const dispatch = useDispatch();\n  const isPlayGame = useSelector(getIsPlayGame);\n  const currentWord = useSelector(currentWordAction);\n  const isTrainMode = useSelector(getIsTrainMode);\n  const clickHandler = () => {\n    setFlipped(!isFlipped);\n  };\n\n  const playGame = (): void => {\n    const audio = new Audio();\n    const audioUrl = cardsData[CategoryIds.ACTION_A].data.map((el) => el.audioSrc);\n    console.log(audioUrl);\n    audio.src = audioUrl[0];\n    // dispatch(currentWordAction(audioSrc[0]));\n    // audio.play();\n  };\n\n  playGame();\n\n  const voice = (): void => {\n    const audio = new Audio();\n    audio.src = audioSrc;\n    audio.currentTime = 0;\n    audio.play();\n    dispatch(currentWordAction(audioSrc));\n  };\n\n  return (\n    <div className={'card' + (isFlipped ? ' flipped' : '')} onMouseLeave={() => setFlipped(false)}>\n      <div className=\"front\" style={isTrainMode ? { height: '19rem' } : { height: '11rem' }}>\n        <div className=\"image-container\" onClick={isTrainMode ? voice : playGame}>\n          <img src={`./${image}`} alt=\"image\" className=\"card-pic\" />\n        </div>\n        <div\n          className=\"card-content\"\n          style={isTrainMode ? { display: 'block' } : { display: 'none' }}\n        >\n          <div className=\"card-title\">\n            <p>{word}</p>\n            <button onClick={clickHandler}>\n              <img src=\"https://img.icons8.com/color/48/000000/redo.png\" className=\"flipped-icon\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className=\"back\">\n        <img src={`../${image}`} alt=\"image\" className=\"card-pic\" />\n        <div className=\"card-content\">\n          <div className=\"card-title\">\n            <p>{translation}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CardGame;\n","import React, { ReactElement } from 'react';\nimport { useParams } from 'react-router';\nimport { cardsData } from '../../data/cards';\nimport CardGame from '../CardGame/CardGame';\n\nfunction GameContainer(): ReactElement {\n  const { category } = useParams<{ category: string }>();\n  const { data } = cardsData[category];\n  return (\n    <div className=\"main\">\n      {data.map((el, id) => (\n        <CardGame\n          word={el.word}\n          translation={el.translation}\n          image={el.image}\n          audioSrc={`../${el.audioSrc}`}\n          key={id}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default GameContainer;\n","import React, { ReactElement } from 'react';\nimport { CardModel } from '../interfaces';\nimport './Card.css';\n\nfunction Card({ title, imageSrc }: CardModel): ReactElement {\n  return (\n    <div className=\"card-container\">\n      <div className=\"image-container\">\n        <img src={`./${imageSrc}`} alt=\"image\" className=\"menu-card-pic\" />\n        <div className=\"card-content\">\n          <div className=\"card-title\">\n            <h3>{title}</h3>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React, { ReactElement } from 'react';\nimport Card from '../Card/Card';\nimport { Link } from 'react-router-dom';\nimport './main.css';\nimport { cardsData } from '../../data/cards';\nimport { link } from 'fs';\n\nfunction Main(): ReactElement {\n  const categoryList = [];\n  for (const key in cardsData) {\n    categoryList.push(\n      <Link to={`/game/${key}`} key={key}>\n        <Card title={cardsData[key].name} imageSrc={cardsData[key].data[0].image} />\n      </Link>\n    );\n  }\n  return <div className=\"main\">{categoryList}</div>;\n}\n\nexport default Main;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { store } from '..';\nimport { CategoryIds } from '../components/constants';\nimport { ActionStateModel, InitialStateModel } from '../components/interfaces';\nimport { cardsData } from '../data/cards';\nimport { currentWordAction } from '../redux/actions';\nimport { initialState } from '../redux/rootReducer';\nimport { getCurrentWord } from '../redux/selectors';\n\nexport function GameFunctional(): void {\n  console.log();\n  // console.log(currentWord);\n  // const audio = new Audio();\n  // const pathUrl = window.location.pathname.replace('/game/', '');\n  // for (const key in cardsData) {\n  //   if (key == pathUrl) {\n  //     const audioUrl = `${cardsData[key].data[0].audioSrc}`;\n  //     audio.src = `./${audioUrl}`;\n  //     console.log(audio.src);\n  //     audio.play();\n  //   }\n  // }\n}\n","import React, { ReactElement } from 'react';\nimport './burgerMenu.css';\nimport { cardsData } from '../../data/cards';\nimport { Link } from 'react-router-dom';\n\nfunction BurgerMenu({\n  active,\n  setActive,\n}: {\n  active: boolean;\n  setActive: React.Dispatch<React.SetStateAction<boolean>>;\n}): ReactElement {\n  const categoryList = [];\n  for (const key in cardsData) {\n    categoryList.push(\n      <Link to={`/game/${key}`} key={key} className=\"menu-link__item\">\n        {key}\n      </Link>\n    );\n  }\n  return (\n    <div className={active ? 'menu active' : 'menu'} onClick={() => setActive(false)}>\n      <div className=\"menu-content\" onClick={(e) => e.stopPropagation()}>\n        <div className=\"menu-header\">MENU</div>\n        <div className=\"menu-list\">\n          <Link to=\"/\" className=\"menu-link__item\">\n            Main\n          </Link>\n          {categoryList}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default BurgerMenu;\n","import React, { ReactElement, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { GameFunctional } from '../../gameFunctional/gameFunctional';\nimport { playGameModeAction, toggleGameModeAction } from '../../redux/actions';\nimport { getIsPlayGame, getIsTrainMode } from '../../redux/selectors';\nimport BurgerMenu from '../burgerMenu/burgerMenu';\nimport './Header.css';\n\nfunction Header(): ReactElement {\n  const [menuActive, setMenuActive] = useState(false);\n  const dispatch = useDispatch();\n  const isTrainMode = useSelector(getIsTrainMode);\n  const isPlayGame = useSelector(getIsPlayGame);\n  console.log(isTrainMode);\n  console.log(isPlayGame);\n\n  function startBtn(): ReactElement {\n    return (\n      <div className=\"btn-container\">\n        <button\n          className=\"btn\"\n          style={!isPlayGame ? { display: 'none' } : { display: 'block' }}\n          onClick={() => dispatch(playGameModeAction())}\n        >\n          Start game\n        </button>\n      </div>\n    );\n  }\n\n  function repeatBtn(): ReactElement {\n    return (\n      <div className=\"btn-container\">\n        <button\n          className=\"btn\"\n          style={isTrainMode ? { display: 'none' } : { display: 'block' }}\n          onClick={GameFunctional}\n        >\n          Repeat\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className=\"header\"\n      style={!isTrainMode ? { backgroundColor: 'red' } : { backgroundColor: 'aqua' }}\n    >\n      <div className=\"wrapper header-wrapper\">\n        <nav>\n          <div className=\"burger-btn\" onClick={() => setMenuActive(!menuActive)}>\n            <span />\n          </div>\n        </nav>\n        <h1 className=\"header-title\" style={isTrainMode ? { color: 'black' } : { color: 'orange' }}>\n          English for kids\n        </h1>\n      </div>\n      <BurgerMenu active={menuActive} setActive={setMenuActive} />\n      <div className=\"switch\">\n        <label>\n          Play\n          <input\n            type=\"checkbox\"\n            checked={isTrainMode}\n            onChange={() => dispatch(toggleGameModeAction())}\n          />\n          <span className=\"lever\"></span>\n          Train\n        </label>\n        {!isTrainMode ? startBtn() : ''}\n        {isPlayGame ? '' : repeatBtn()}\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React, { ReactElement } from 'react';\nimport { Route, HashRouter as Router, Switch } from 'react-router-dom';\nimport './app.css';\nimport GameContainer from './components/gameContainer/gameContainer';\nimport Main from './components/main/main';\nimport Header from './components/Header/Header';\n\nfunction App(): ReactElement {\n  return (\n    <div className=\"app-wrapper\">\n      <Router>\n        <Header />\n        <Switch>\n          <Route path=\"/\" exact>\n            <Main />\n          </Route>\n          <Route path=\"/game/:category\">\n            <GameContainer />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ActionTypes } from '../components/constants';\nimport { ActionStateModel, InitialStateModel } from '../components/interfaces';\n\nexport const initialState: InitialStateModel = {\n  isTrainMode: true,\n  isPlayGame: true,\n  game: {\n    currentWord: '',\n  },\n};\n\nexport default function RootReducer(\n  state = initialState,\n  action: ActionStateModel\n): InitialStateModel {\n  switch (action.type) {\n    case ActionTypes.TOGGLE_GAME_MODE:\n      return {\n        ...state,\n        isTrainMode: !state.isTrainMode,\n      };\n    case ActionTypes.PLAY_GAME_MODE:\n      return {\n        ...state,\n        isPlayGame: !state.isPlayGame,\n      };\n    case ActionTypes.CURRENT_WORD:\n      return {\n        ...state,\n        game: {\n          ...state.game,\n          currentWord: action.payload!,\n        },\n      };\n    default:\n      return state;\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux';\nimport RootReducer from './redux/rootReducer';\nimport { Provider } from 'react-redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { HashRouter } from 'react-router-dom';\n\nexport const store = createStore(\n  RootReducer,\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  //@ts-ignore\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(\n  <HashRouter>\n    <React.StrictMode>{app}</React.StrictMode>\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}